---
import BaseLayout from '../layouts/BaseLayout.astro';
import { getCalendarEvents } from '../lib/calendar';
import { formatDate, isToday, decodeHtml, capitalizeFirstLetter, formatRecurrence, generateGoogleMapsLink } from '../utils';
import { getCalendar } from '../utils';

const cal = getCalendar('showcases');
const events = await getCalendarEvents(cal);
---

<BaseLayout title="RVA Songwriter Showcases">
  <h1>Showcases:</h1>
  <a data-add href="https://calendar.google.com/calendar/ical/7c54a7efcbad1512c0061bacfc4635726f1893ed9db7456b4b1b05c8b9c26561%40group.calendar.google.com/public/basic.ics" target="_blank">Add these events to your calendar -></a>
  {events.map((event) => {
    const eventStart = event.start.dateTime || event.start.date;
    return (
      <div 
        data-event
        key={event.id} 
        class={isToday(eventStart) ? 'today-event' : ''}
      >
        {isToday(eventStart) && <div class="today">TODAY!</div>}
        <h2>{event.summary}<br /><small>{formatDate(eventStart)}</small></h2>
        {event.recurrence && (
          <h3>{capitalizeFirstLetter(event.recurrence.map(rrule => formatRecurrence(rrule)).join(', '))}
          </h3>
        )}
        <p><strong>Info:</strong><br /><span set:html={decodeHtml(event.description || '')}></span></p>
        {event.location && (
          <p>
            <strong>Location:</strong> {event.location}<br />
            <a href={generateGoogleMapsLink(event.location)} target="_blank" rel="noopener noreferrer">(View on Google Maps) -></a>
          </p>
        )}
      </div>
    );
  })}
</BaseLayout>